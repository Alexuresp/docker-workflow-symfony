sudo: required

services:
  - docker

language: bash

branches:
    only:
      - master

env:
    global:
      - secure: "bVSEkJFCQ4xuL4Lxs7CS78Pfj9EeFkgDAd39m/8RRSg2WoPQ9ghQTLLsJ18xN9agGkGL30VeDxZT2txxcrx2JD2NIkA/sAQxLKM5aW8VVrhO4pRpswipK2ffhl6GrHzj2MzxU18R3txRnOu5xrkV4pLMVhqGverM8PgTfXdONPvU6mD9MB0xO5wi7LiVB0+Yx3Mav7VolWvjsGW1SolB7Ib/aGUOhd7E/uSzTNP/u8w/ZUt1yDVw1ZnHPPHTXaDdlv7KF1BA4+ugmTF9Jc4DJ0GYi/kV5wEG7nTP3sMSeq4F2UxT2rX3v93Hin2XNHE417VyEb79D5zQ8vBWOa9hky3kxDNqCGM37xJhv4RsSGHtukZYxEroMHJ22bHxM38DVvkhQ3qp6r4P46pXx9FFirfph+x2PJxOSsRCiQ5+/I/ke9ZQSzsx1PgXnn2645nWfcJymEa5ojg1K1o2eQSXgl5fIZ3bYTktEQrxK3L40TYnBeYIcTEmbT4NUp4G6Yft6YPTCSbgS8sf7e3lfMBY9a9YZtUY1sLgj8oMQnmfw58P4zO9PFVrODvOpZ1CBGSMJQ6HI9ULSNZ3sC0PwZDOqx4CAOHcwBNzyXx97rQi1f3J4rqI0aqmArpBosuXKsyyU2J1dO479L/JJZ7/A97XjIKUBcwBxo/CJHj9JOV9NEg="
      - CI_NGINX_IMAGE_WITH_TAG=nginx_image
      - CI_APP_IMAGE_WITH_TAG=app_image
      - NETWORK_IP=192.168.10.2
      - NETWORK_NAME=graynetwork

before_install:
  - echo '{"github-oauth":{"github.com":"'"$COMPOSER_GITHUB_TOKEN"'"}}' > auth.json
  - mkdir build

install:
  - docker network create $NETWORK_NAME --gateway 192.168.10.1 --subnet 192.168.10.0/24
  - docker build --tag $CI_NGINX_IMAGE_WITH_TAG --build-arg server_name=docker.local --build-arg server_upstream=prod --build-arg app_php=app ./docker/nginx
  - docker build --tag $CI_APP_IMAGE_WITH_TAG .
  - docker-compose -f docker-compose-deploy.yml config > build/docker-compose.yml

before_script:
  - cd build
  - docker-compose up -d
  - docker-compose up -d --force-recreate --no-deps spare
  - docker-compose exec -T spare phing storage-prepare database-deploy
  - docker-compose up -d --force-recreate --no-deps php
  - docker-compose stop nginx
  - docker-compose up -d nginx

script:
  - SERVICES=(nginx mysql php spare)
  - for (( i=0; i<${#SERVICES[@]}; i++ )) do
        ID=$(docker-compose ps -q ${SERVICES[$i]});
        PORT=$(docker ps --filter id=$ID --filter status=running --format "{{.Ports}}");
        if [ ! $PORT ]; then
            exit 1;
        fi
    done

after_success:
  - docker-compose images
  - docker-compose ps
  - docker-compose logs

after_failure:
  - docker-compose ps
  - docker-compose logs
