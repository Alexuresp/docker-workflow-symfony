<?xml version="1.0"?>
<project name="Docker Symfony App" default="init" basedir=".">
    <property name="composer.path" value="/usr/local/bin/composer" />
    <property name="composer.cache-dir" value="/srv/var/cache/composer" />
    <property name="symfony.console" value="bin/console" />
    <property name="symfony.env" value="dev" />
    <property name="project.storage.dir" value="${project.basedir}/storage" />

    <property file=".env" prefix="docker-compose"/>

    <target name="init" depends="database-deploy,storage-prepare">
        <echo message="${phing.project.name} Init - OK" />
    </target>

    <target name="app-deploy">
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} cache:clear --env=${symfony.env} --no-warmup" />
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} cache:warmup --env=${symfony.env}" />
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} assets:install --env=${symfony.env} public" />

        <echo message="${phing.project.name} AppDeploy - OK" />
    </target>

    <target name="database-deploy" depends="database-ready">
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} doctrine:cache:clear-metadata --env=${symfony.env}" />
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} doctrine:schema:update --env=${symfony.env} --force --no-interaction" />
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} doctrine:migrations:status --env=${symfony.env}" />
        <exec passthru="true" checkreturn="true"
              command="php ${symfony.console} doctrine:migrations:migrate --env=${symfony.env} --no-interaction --allow-no-migration" />

        <echo message="${phing.project.name} DatabaseDeploy - OK" />
    </target>

    <target name="storage-prepare">
        <mkdir dir="${project.storage.dir}/upload" />
        <chown file="${project.storage.dir}/upload" user="www-data" group="www-data" failonerror="false" />

        <mkdir dir="${project.storage.dir}/sessions" />
        <chown file="${project.storage.dir}/sessions" user="www-data" group="www-data" failonerror="false" />

        <symlink link="public/upload" target="storage/upload" />
    </target>

    <target name="database-ready" depends="which-nc" if="nc.exists">
        <echo message="Waiting for a database..." />
        <retry retryCount="120" retryDelay="1">
            <exec command="nc -z -v -w30 ${docker-compose.ENV_database_host} ${docker-compose.ENV_database_port}" passthru="true" checkreturn="true" />
        </retry>
        <echo message="Database is ready!" />
    </target>

    <target name="which-nc">
        <if>
            <equals arg1="${host.os}" arg2="WINNT" />
            <then>
                <property name="which.path" value="where /Q" />
            </then>
            <else>
                <property name="which.path" value="which" />
            </else>
        </if>
        <exec command="${which.path} nc" outputProperty="nc.path" />
        <if>
            <not>
                <equals arg1="${nc.path}" arg2=""></equals>
            </not>
            <then>
                <property name="nc.exists" value="1" />
            </then>
        </if>
    </target>


    <!-- <target name="composer-install">
        <composer composer="${composer.path}" command="config">
            <arg value="-g" />
            <arg value="cache-dir" />
            <arg value="${composer.cache-dir}" />
        </composer>
        <composer composer="${composer.path}" command="install" />
        <exec executable="sync-vendor" passthru="true" />

        <echo message="${phing.project.name} ComposerInstall - OK" />
    </target> -->
</project>
